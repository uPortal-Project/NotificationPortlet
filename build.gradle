plugins {
    id 'net.researchgate.release' version '3.1.0'
    // TODO: wait for https://github.com/hierynomus/license-gradle-plugin/issues/161
    // id "com.github.hierynomus.license" version "0.14.0" apply false
    id 'maven-publish'
}

apply plugin: 'java'

description = "Notifications infrastucture for Apereo uPortal"

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'
    // TODO: wait for https://github.com/hierynomus/license-gradle-plugin/issues/161
    // apply plugin: 'license'

    repositories {
        mavenCentral()
        mavenLocal()
    }

    test {
        useJUnitPlatform()
    }

    dependencies {
        testCompileOnly 'junit:junit:4.13.2'
        testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.11.4'
    }

    // TODO: wait for https://github.com/hierynomus/license-gradle-plugin/issues/161
    // license {
    //     header = rootProject.file('docs/short-license-header.txt')
    //     strictCheck = true
    //     mapping {
    //         java = 'SLASHSTAR_STYLE'
    //     }
    //     exclude "**/*.json"
    // }

    sourceCompatibility = 17
    targetCompatibility = 17

    /* Release Management
     *
     * Based on Sonatype's guide for publishing w/ Gradle:  http://central.sonatype.org/pages/gradle.html
     */
    ext {
        publishingUsername = project.hasProperty('ossrhUsername') ? project.getProperty('ossrhUsername') : ""
        publishingPassword = project.hasProperty('ossrhPassword') ? project.getProperty('ossrhPassword') : ""
    }
    tasks.register('javadocJar', Jar) {
        archiveClassifier = 'javadoc'
        from javadoc.destinationDir
    }
    tasks.register('sourcesJar', Jar) {
        archiveClassifier = 'sources'
        from sourceSets.main.allSource
    }
    tasks.withType(Javadoc) {
        // FIXME: Fix errors rather than supressing them
        failOnError = false
    }
    tasks.withType(Jar) {
        from(project.projectDir) {
            include "${rootDir}/LICENSE"
            into 'META-INF'
        }
    }
    artifacts {
        archives javadocJar, sourcesJar
    }
    signing {
        required { gradle.taskGraph.hasTask('uploadArchives') }
        sign configurations.archives
    }

    release {
        tagTemplate = 'v${version}' // Looks like it should be a GString, but not necessary
        git {
            requireBranch.set('')
        }
    }
    afterReleaseBuild.dependsOn publish
}
